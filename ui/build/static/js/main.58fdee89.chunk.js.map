{"version":3,"sources":["../node_modules/moment-mini/locale sync /^/.*$","App.tsx","buildFunctionDiagramCode.ts","AppState.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","App","observer","window","location","search","startsWith","state","this","props","pathText","decodeURIComponent","substr","load","svgElement","document","getElementById","mountClickEventToFunctionNodes","getElementsByClassName","AppBar","position","color","Toolbar","Typography","variant","className","Link","href","origin","pathname","TextField","fullWidth","margin","label","InputLabelProps","shrink","placeholder","disabled","inProgress","value","onChange","evt","target","onKeyPress","handleKeyPress","Box","width","Button","size","onClick","LinearProgress","functionsLoaded","FormGroup","row","FormControlLabel","control","Checkbox","checked","renderFunctions","renderProxies","error","diagramSvg","dangerouslySetInnerHTML","__html","getStyledSvg","navigator","clipboard","writeText","diagramCode","URL","createObjectURL","Blob","type","download","rel","loading","height","src","alt","data-recalc-dims","event","key","preventDefault","nodes","i","length","el","match","exec","closuredFunctionName","onclick","gotoFunctionCode","style","cursor","svg","replace","React","Component","space","getTriggerBindingText","binding","authLevel","methods","join","route","path","databaseName","collectionName","eventHubName","queueName","topicName","subscriptionName","schedule","getBindingText","tableName","maxSymbolsInTitle","getRequestOverridesArrowCode","requestOverrides","arrowText","JSON","stringify","getResponseOverridesArrowCode","responseOverrides","AppState","_iconsSvg","_iconsSvgPromise","axios","get","mermaid","initialize","startOnLoad","flowchart","curve","useMaxWidth","htmlLabels","_diagramSvg","_diagramCode","_error","_inProgress","_traversalResult","_renderFunctions","val","render","_renderProxies","functionsMap","proxiesMap","settings","doNotRenderFunctions","functions","name","func","triggerBinding","undefined","inputBindings","outputBindings","otherBindings","nodeCode","bindings","endsWith","direction","push","getFunctionHash","f","isCalledBy","sort","f1","f2","s1","s2","calledBy","inputBinding","outputBinding","otherBinding","isSignalledBy","signalledBy","signalName","isCalledByItself","doNotRenderProxies","proxyNodesColor","nodeTitle","notAddedToCsProjFile","proxy","proxyPurifiedName","warningNotAddedToCsProjFile","matchCondition","nodeName","backendUri","nextNodeName","nodeColor","buildFunctionDiagramCode","proxies","applyIcons","err","message","projectPath","history","replaceState","encodeURIComponent","traversedFunctionsPromise","post","Promise","all","then","responses","data","response","functionName","functionOrProxy","filePath","open","computed","observable","ReactDOM"],"mappings":"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","file":"static/js/main.58fdee89.chunk.js","sourcesContent":["var map = {\n\t\"./locale\": 218,\n\t\"./locale.js\": 218\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 492;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { AppBar, Box, Button, Checkbox, FormControlLabel, FormGroup, LinearProgress, Link, TextField, Toolbar, Typography } from '@material-ui/core';\r\n\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { AppState } from './AppState';\r\n\r\n@observer\r\nexport default class App extends React.Component<{ state: AppState }> {\r\n\r\n    componentDidMount() {\r\n\r\n        if (window.location.search.startsWith('?path=')) {\r\n         \r\n            const state = this.props.state;\r\n            state.pathText = decodeURIComponent(window.location.search.substr(6));\r\n            state.load();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        // Mounting click handlers to diagram nodes\r\n        const svgElement = document.getElementById('mermaidSvgId');\r\n\r\n        if (!!svgElement) {\r\n\r\n            this.mountClickEventToFunctionNodes(svgElement.getElementsByClassName('function'));\r\n            this.mountClickEventToFunctionNodes(svgElement.getElementsByClassName('orchestrator'));\r\n            this.mountClickEventToFunctionNodes(svgElement.getElementsByClassName('activity'));\r\n            this.mountClickEventToFunctionNodes(svgElement.getElementsByClassName('entity'));\r\n            this.mountClickEventToFunctionNodes(svgElement.getElementsByClassName('proxy'));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const state = this.props.state;\r\n\r\n        return (<>\r\n\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n\r\n                    <Typography variant=\"h5\" color=\"inherit\" className=\"title-typography\">\r\n                        <Link color=\"inherit\" href={window.location.origin + window.location.pathname}>\r\n                            Azure Functions as a Graph\r\n                        </Link>\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        className=\"filter-textfield\"\r\n                        margin=\"dense\"\r\n                        label=\"GitHub link or local path to Functions project\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        placeholder=\"e.g. 'https://github.com/scale-tone/repka-durable-func'\"\r\n                        disabled={state.inProgress}\r\n                        value={state.pathText}\r\n                        onChange={(evt) => state.pathText = evt.target.value as string}\r\n                        onKeyPress={(evt: React.KeyboardEvent<HTMLInputElement>) => this.handleKeyPress(evt)}\r\n                    />\r\n\r\n                    <Box width={30} />\r\n\r\n                    <Button\r\n                        className=\"filter-button\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        disabled={state.inProgress || !state.pathText}\r\n                        onClick={() => state.load()}\r\n                    >\r\n                        Visualize\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {!!state.inProgress && (<LinearProgress />)}\r\n\r\n            {!!state.functionsLoaded && (\r\n                <FormGroup row className=\"settings-group\">\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox\r\n                            color=\"default\"\r\n                            disabled={state.inProgress}\r\n                            checked={state.renderFunctions}\r\n                            onChange={(evt) => state.renderFunctions = evt.target.checked}\r\n                        />}\r\n                        label=\"Show Functions\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox\r\n                            color=\"default\"\r\n                            disabled={state.inProgress}\r\n                            checked={state.renderProxies}\r\n                            onChange={(evt) => state.renderProxies = evt.target.checked}\r\n                        />}\r\n                        label=\"Show Proxies\"\r\n                    />\r\n\r\n                </FormGroup>\r\n            )}\r\n            \r\n            {!!state.error && (<Typography className=\"error-typography\" color=\"error\" variant=\"h5\" >{state.error}</Typography>)}\r\n            \r\n            {!!state.diagramSvg && (<>\r\n                \r\n                <div className=\"diagram-div\"\r\n                    dangerouslySetInnerHTML={{ __html: this.getStyledSvg(state.diagramSvg) }}\r\n                />\r\n\r\n                <Toolbar variant=\"dense\" className=\"bottom-toolbar\">\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        disabled={state.inProgress}\r\n                        onClick={() => window.navigator.clipboard.writeText(state.diagramCode)}\r\n                    >\r\n                        <FileCopyIcon />\r\n                        <Box width={10} />\r\n                        <Typography color=\"inherit\">Copy diagram code to Clipboard</Typography>\r\n                    </Button>\r\n\r\n                    <Box width={20} />\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        disabled={state.inProgress}\r\n                        href={URL.createObjectURL(new Blob([this.getStyledSvg(state.diagramSvg)], { type: 'image/svg+xml' }))}\r\n                        download={'functions.svg'}\r\n                    >\r\n                        <SaveIcon />\r\n                        <Box width={20} />\r\n                        <Typography color=\"inherit\">Save as .SVG</Typography>\r\n                    </Button>\r\n\r\n                    <Box width={20} />\r\n                </Toolbar>\r\n            </>)}\r\n\r\n            <a className=\"github-link\" href=\"https://github.com/scale-tone/az-func-as-a-graph#az-func-as-a-graph\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_white_ffffff.png?resize=149%2C149\" alt=\"Fork me on GitHub\" data-recalc-dims=\"1\" />\r\n            </a>\r\n\r\n        </>);\r\n    }\r\n\r\n    private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (event.key === 'Enter') {\r\n            // Otherwise the event will bubble up and the form will be submitted\r\n            event.preventDefault();\r\n\r\n            this.props.state.load();\r\n        }\r\n    }\r\n\r\n    private mountClickEventToFunctionNodes(nodes: HTMLCollection): void {\r\n\r\n        const state = this.props.state;\r\n\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            const el = nodes[i] as HTMLElement;\r\n\r\n            const match = /flowchart-(.+)-/.exec(el.id);\r\n            if (!!match) {\r\n\r\n                const closuredFunctionName = match[1];\r\n                el.onclick = () => state.gotoFunctionCode(closuredFunctionName);\r\n                el.style.cursor = 'pointer';\r\n            }\r\n        }\r\n    }\r\n\r\n    // Appends some styling to SVG code, so it can also be saved as file\r\n    private getStyledSvg(svg: string): string {\r\n\r\n        return svg.replace('</style>',\r\n            '.label > g > text { transform: translateX(25px); }' +\r\n            '</style>'\r\n        );\r\n    }\r\n}","import { FunctionsMap, ProxiesMap } from './shared/FunctionsMap';\r\n\r\nconst space = '#32;';\r\n\r\nfunction getTriggerBindingText(binding: any): string {\r\n\r\n    switch (binding.type) {\r\n        case 'httpTrigger':\r\n            return `${binding.authLevel === 'anonymous' ? '#127760;' : '#128274;'} http${!binding.methods ? '' : ':[' + binding.methods.join(',') + ']'}${!binding.route ? '' : ':' + binding.route}`;\r\n        case 'blobTrigger':\r\n            return `${space}blob:${binding.path ?? ''}`;\r\n        case 'cosmosDBTrigger':\r\n            return `${space}cosmosDB:${binding.databaseName ?? ''}:${binding.collectionName ?? ''}`;\r\n        case 'eventHubTrigger':\r\n            return `${space}eventHub:${binding.eventHubName ?? ''}`;\r\n        case 'serviceBusTrigger':\r\n            return `${space}serviceBus:${!binding.queueName ? (binding.topicName ?? '') : binding.queueName}${!binding.subscriptionName ? '' : ':' + binding.subscriptionName}`;\r\n        case 'queueTrigger':\r\n            return `${space}queue:${binding.queueName ?? ''}`;\r\n        case 'timerTrigger':\r\n            return `${space}timer:${binding.schedule ?? ''}`;\r\n        default:\r\n            return `${space}${binding.type}`;\r\n    }\r\n}\r\n\r\nfunction getBindingText(binding: any): string {\r\n\r\n    switch (binding.type) {\r\n        case 'table':\r\n            return `${space}table:${binding.tableName ?? ''}`;\r\n        case 'blob':\r\n            return `${space}blob:${binding.path ?? ''}`;\r\n        case 'cosmosDB':\r\n            return `${space}cosmosDB:${binding.databaseName ?? ''}:${binding.collectionName ?? ''}`;\r\n        case 'eventHub':\r\n            return `${space}eventHub:${binding.eventHubName ?? ''}`;\r\n        case 'serviceBus':\r\n            return `${space}serviceBus:${!binding.queueName ? (binding.topicName ?? '') : binding.queueName}${!binding.subscriptionName ? '' : ':' + binding.subscriptionName}`;\r\n        case 'queue':\r\n            return `${space}queue:${binding.queueName ?? ''}`;\r\n        default:\r\n            return `${space}${binding.type}`;\r\n    }\r\n}\r\n\r\nexport type GraphSettings = {\r\n    doNotRenderFunctions?: boolean,\r\n    doNotRenderProxies?: boolean,\r\n};\r\n\r\n// Translates functions and their bindings into a Mermaid Flowchart diagram code\r\nexport function buildFunctionDiagramCode(functionsMap: FunctionsMap, proxiesMap: ProxiesMap, settings: GraphSettings = {}): string {\r\n\r\n    var code = '';\r\n\r\n    if (!settings.doNotRenderFunctions) {\r\n        \r\n        const functions = [];\r\n\r\n        // Determine what kind of function this one is\r\n        for (const name in functionsMap) {\r\n            const func = functionsMap[name];\r\n    \r\n            var triggerBinding = undefined, inputBindings = [], outputBindings = [], otherBindings = [];\r\n            var nodeCode = `${name}{{\"${space}${name}\"}}:::function`;\r\n    \r\n            for (const binding of func.bindings) {\r\n    \r\n                if (binding.type === 'orchestrationTrigger') {\r\n                    nodeCode = `${name}[[\"${space}${name}\"]]:::orchestrator`;\r\n                } else if (binding.type === 'activityTrigger') {\r\n                    nodeCode = `${name}[/\"${space}${name}\"/]:::activity`;\r\n                } else if (binding.type === 'entityTrigger') {\r\n                    nodeCode = `${name}[(\"${space}${name}\")]:::entity`;\r\n                }\r\n    \r\n                if (binding.type.endsWith('Trigger')) {\r\n                    triggerBinding = binding;\r\n                } else if (binding.direction === 'in') {\r\n                    inputBindings.push(binding);\r\n                } else if (binding.direction === 'out') {\r\n                    outputBindings.push(binding);\r\n                } else {\r\n                    otherBindings.push(binding);\r\n                }\r\n            }\r\n    \r\n            functions.push({ name, nodeCode, triggerBinding, inputBindings, outputBindings, otherBindings, ...func });\r\n        }\r\n    \r\n        // Sorting by trigger type, then by name. Moving the ones that are being called to the bottom.\r\n        const getFunctionHash = (f) => {\r\n    \r\n            var hash = (!!f.isCalledBy?.length || !f.triggerBinding || !f.triggerBinding.type) ? '' : f.triggerBinding.type;\r\n            hash += '~' + f.name;\r\n            return hash;\r\n        }\r\n        functions.sort((f1, f2) => {\r\n            \r\n            var s1 = getFunctionHash(f1);\r\n            var s2 = getFunctionHash(f2);\r\n    \r\n            return (s1 > s2) ? 1 : ((s2 > s1) ? -1 : 0);\r\n        });\r\n    \r\n        // Rendering\r\n        for (const func of functions) {\r\n    \r\n            code += `${func.nodeCode}\\n`;\r\n            // Making Functions nodes a bit darker\r\n            code += `style ${func.name} fill:#D9D9FF,stroke-width:2px\\n`;\r\n    \r\n            if (!!func.isCalledBy?.length) {\r\n    \r\n                for (const calledBy of func.isCalledBy) {\r\n                    code += `${calledBy} ---> ${func.name}\\n`;\r\n                }\r\n    \r\n            } else if (!!func.triggerBinding) {\r\n    \r\n                code += `${func.name}.${func.triggerBinding.type}>\"${getTriggerBindingText(func.triggerBinding)}\"]:::${func.triggerBinding.type} --> ${func.name}\\n`;\r\n            }\r\n    \r\n            for (var i = 0; i < func.inputBindings.length; i++) {\r\n                const inputBinding = func.inputBindings[i];\r\n                code += `${func.name}.${i}.${inputBinding.type}([\"${getBindingText(inputBinding)}\"]):::${inputBinding.type} -.-> ${func.name}\\n`;\r\n            }\r\n    \r\n            for (var i = 0; i < func.outputBindings.length; i++) {\r\n                const outputBinding = func.outputBindings[i];\r\n                code += `${func.name} -.-> ${func.name}.${i}.${outputBinding.type}([\"${getBindingText(outputBinding)}\"]):::${outputBinding.type}\\n`;\r\n            }\r\n    \r\n            for (var i = 0; i < func.otherBindings.length; i++) {\r\n                const otherBinding = func.otherBindings[i];\r\n                code += `${func.name} -.- ${func.name}.${i}.${otherBinding.type}([\"${getBindingText(otherBinding)}\"]):::${otherBinding.type}\\n`;\r\n            }\r\n    \r\n            if (!!func.isSignalledBy?.length) {\r\n    \r\n                for (const signalledBy of func.isSignalledBy) {\r\n                    code += `${signalledBy.name} -- \"#9889; ${signalledBy.signalName}\" ---> ${func.name}\\n`;\r\n                }\r\n            }\r\n    \r\n            if (!!func.isCalledByItself) {\r\n    \r\n                code += `${func.name} -- \"[ContinueAsNew]\" --> ${func.name}\\n`;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Also proxies\r\n    if (!settings.doNotRenderProxies && (Object.keys(proxiesMap).length > 0)) {\r\n        \r\n        const proxyNodesColor = '#FFE6C8';\r\n\r\n        var nodeTitle = ``;\r\n        var notAddedToCsProjFile = false;\r\n\r\n        for (const name in proxiesMap) {\r\n            const proxy = proxiesMap[name];\r\n            const proxyPurifiedName = name.replace(/ /g, '');\r\n\r\n            notAddedToCsProjFile = proxy.warningNotAddedToCsProjFile;\r\n\r\n            nodeTitle = '';\r\n            if (!!proxy.matchCondition) {\r\n                \r\n                if (!!proxy.matchCondition.methods && !!proxy.matchCondition.methods.length) {\r\n                    nodeTitle += (!!nodeTitle ? ':' : '') + `[${proxy.matchCondition.methods.join(',')}]`;\r\n                }\r\n\r\n                if (!!proxy.matchCondition.route) {\r\n                    nodeTitle += (!!nodeTitle ? ':' : '') + proxy.matchCondition.route;\r\n                }\r\n            }\r\n            if (!nodeTitle) {\r\n                nodeTitle = name;\r\n            }\r\n\r\n            var nodeName = `proxy.${proxyPurifiedName}`;\r\n\r\n            code += `proxies.json -. \"${name}\" .-> ${nodeName}([\"${space}${nodeTitle}\"]):::proxy\\n`;\r\n            code += `style ${nodeName} fill:${proxyNodesColor}\\n`;\r\n\r\n            if (!!proxy.backendUri) {\r\n\r\n                nodeTitle = proxy.backendUri.replace(/'response./g, `'`);\r\n\r\n                const nextNodeName = `proxy.${proxyPurifiedName}.backendUri`;\r\n\r\n                code += `${nodeName} ${getRequestOverridesArrowCode(proxy.requestOverrides)} ${nextNodeName}[\"${space}${nodeTitle}\"]:::http\\n`;\r\n                code += `style ${nextNodeName} fill:${proxyNodesColor}\\n`;\r\n\r\n                nodeName = nextNodeName;\r\n            }\r\n\r\n            const nextNodeName = `proxy.${proxyPurifiedName}.response`;\r\n\r\n            code += `${nodeName} ${getResponseOverridesArrowCode(proxy.responseOverrides)} ${nextNodeName}([\"${space}.\"]):::http\\n`;\r\n            code += `style ${nextNodeName} fill:${proxyNodesColor}\\n`;\r\n        }\r\n\r\n        nodeTitle = `proxies.json`;\r\n        var nodeColor = proxyNodesColor;\r\n        if (notAddedToCsProjFile) {\r\n            nodeTitle += ` #9888; Not added to .CSPROJ file!`;\r\n            nodeColor = `#FF8080`;\r\n        }\r\n\r\n        code += `proxies.json[\"${space}${nodeTitle}\"]\\n`;\r\n        code += `style proxies.json fill:${nodeColor}\\n`;\r\n    }\r\n\r\n    return code;\r\n}\r\n\r\nconst maxSymbolsInTitle = 150;\r\n\r\nfunction getRequestOverridesArrowCode(requestOverrides: any): string {\r\n\r\n    if (!requestOverrides) {\r\n        return `-->`\r\n    }\r\n\r\n    var arrowText = JSON.stringify(requestOverrides)\r\n        .replace(/\"/g, `'`)\r\n        .replace(/'backend.request./g, `'`);\r\n    \r\n    if (arrowText.length > maxSymbolsInTitle) {\r\n        arrowText = arrowText.substr(0, maxSymbolsInTitle) + '...';\r\n    }\r\n\r\n    return `-- \"${arrowText}${space}\" -->`;\r\n}\r\n\r\nfunction getResponseOverridesArrowCode(responseOverrides: any): string {\r\n\r\n    if (!responseOverrides) {\r\n        return `-->`\r\n    }\r\n\r\n    if (!!responseOverrides['response.body']) {\r\n        responseOverrides['response.body'] = '...';\r\n    }\r\n\r\n    var arrowText = JSON.stringify(responseOverrides)\r\n        .replace(/\"/g, `'`)\r\n        .replace(/'response./g, `'`);\r\n    \r\n    if (arrowText.length > maxSymbolsInTitle) {\r\n        arrowText = arrowText.substr(0, maxSymbolsInTitle) + '...';\r\n    }\r\n\r\n    return `-- \"${arrowText}${space}\" -->`;\r\n}","import { observable, computed } from 'mobx';\r\nimport axios from 'axios';\r\nimport mermaid from 'mermaid';\r\n\r\nimport { buildFunctionDiagramCode } from './buildFunctionDiagramCode';\r\nimport { FunctionsMap, ProxiesMap } from './shared/FunctionsMap';\r\n\r\nexport class AppState {\r\n\r\n    @computed\r\n    get diagramSvg(): string { return this._diagramSvg; }\r\n\r\n    @computed\r\n    get diagramCode(): string { return this._diagramCode; }\r\n\r\n    @computed\r\n    get error(): string { return this._error; }\r\n\r\n    @observable\r\n    pathText: string = \"\";\r\n\r\n    @computed\r\n    get inProgress(): boolean { return this._inProgress; };\r\n\r\n    @computed\r\n    get functionsLoaded(): boolean { return !!this._traversalResult; };\r\n\r\n    @computed\r\n    get renderFunctions(): boolean { return this._renderFunctions; };\r\n    set renderFunctions(val: boolean) {\r\n        this._renderFunctions = val;\r\n        this.render();\r\n    };\r\n\r\n    @computed\r\n    get renderProxies(): boolean { return this._renderProxies; };\r\n    set renderProxies(val: boolean) {\r\n        this._renderProxies = val;\r\n        this.render();\r\n    };\r\n\r\n    constructor() {\r\n        mermaid.initialize({\r\n            startOnLoad: true,\r\n\r\n            flowchart: {\r\n                curve: 'Basis',\r\n                useMaxWidth: true,\r\n                htmlLabels: false\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        this._diagramCode = '';\r\n        this._diagramSvg = '';\r\n        this._error = '';\r\n\r\n        if (!this._traversalResult) {\r\n            return;\r\n        }\r\n\r\n        this._inProgress = true;\r\n        try {\r\n\r\n            const diagramCode = buildFunctionDiagramCode(this._traversalResult.functions, this._traversalResult.proxies,\r\n                {\r\n                    doNotRenderFunctions: !this._renderFunctions,\r\n                    doNotRenderProxies: !this._renderProxies\r\n                });\r\n    \r\n            if (!diagramCode) {\r\n                this._inProgress = false;\r\n                return;\r\n            }\r\n    \r\n            this._diagramCode = `graph LR\\n${diagramCode}`;\r\n    \r\n            mermaid.render('mermaidSvgId', this._diagramCode, (svg) => {\r\n    \r\n                this._diagramSvg = this.applyIcons(svg);\r\n    \r\n                this._inProgress = false;\r\n            });    \r\n\r\n        } catch (err) {\r\n            this._error = `Diagram rendering failed: ${err.message}`;\r\n            this._inProgress = false;\r\n        }\r\n    }\r\n\r\n    load() {\r\n\r\n        if (this._inProgress || !this.pathText) {\r\n            return;\r\n        }\r\n        this._inProgress = true;\r\n        this._diagramCode = '';\r\n        this._diagramSvg = '';\r\n        this._error = '';\r\n        this._traversalResult = null;\r\n\r\n        const projectPath = this.pathText;\r\n        window.history.replaceState(null, null, `?path=${encodeURIComponent(projectPath)}`);\r\n        this.pathText = '';\r\n\r\n        const traversedFunctionsPromise = axios.post(`a/p/i/traverse-func`, projectPath);\r\n\r\n        Promise.all([traversedFunctionsPromise, this._iconsSvgPromise]).then(responses => {\r\n\r\n            this._traversalResult = responses[0].data\r\n            this._iconsSvg = responses[1].data;\r\n\r\n            this.render();\r\n\r\n        }, err => {\r\n            this._error = `Parsing failed: ${err.message}.${(!!err.response ? err.response.data : '')}`;\r\n            this._inProgress = false;\r\n        });\r\n    }\r\n\r\n    gotoFunctionCode(functionName: string): void {\r\n\r\n        var functionOrProxy = null;\r\n\r\n        if (functionName.startsWith('proxy.')) {\r\n            \r\n            functionOrProxy = this._traversalResult.proxies[functionName.substr(6)];\r\n\r\n        } else {\r\n\r\n            functionOrProxy = this._traversalResult.functions[functionName];\r\n        }\r\n\r\n        if (!!functionOrProxy && !!functionOrProxy.filePath) {\r\n            window.open(functionOrProxy.filePath);\r\n        }\r\n    }\r\n\r\n    private applyIcons(svg: string): string {\r\n\r\n        // Placing icons code into a <defs> block at the top\r\n        svg = svg.replace(`><style>`, `>\\n<defs>\\n${this._iconsSvg}</defs>\\n<style>`);\r\n\r\n        // Adding <use> blocks referencing relevant icons\r\n        svg = svg.replace(/<g class=\"node (\\w+).*?<g class=\"label\" transform=\"translate\\([0-9,.-]+\\)\"><g transform=\"translate\\([0-9,.-]+\\)\">/g,\r\n            `$&<use href=\"#az-icon-$1\" width=\"20px\" height=\"20px\"/>`);\r\n\r\n        return svg;\r\n    }\r\n\r\n    @observable\r\n    private _error: string;\r\n    @observable\r\n    private _diagramCode: string;\r\n    @observable\r\n    private _diagramSvg: string;\r\n    @observable\r\n    private _inProgress: boolean;\r\n    @observable\r\n    private _renderFunctions: boolean = true;\r\n    @observable\r\n    private _renderProxies: boolean = true;\r\n    @observable\r\n    private _traversalResult: { functions: FunctionsMap, proxies: ProxiesMap };\r\n    private _iconsSvg: string;\r\n\r\n    private _iconsSvgPromise = axios.get('static/icons/all-azure-icons.svg');\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AppState } from './AppState';\r\n\r\nReactDOM.render(<App state={new AppState()} />, document.getElementById('root'));\r\n"],"sourceRoot":""}