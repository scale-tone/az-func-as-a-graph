{"version":3,"sources":["../node_modules/moment-mini/locale sync /^/.*$","App.tsx","AppState.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","App","observer","window","location","search","startsWith","state","this","props","pathText","decodeURIComponent","substr","load","AppBar","position","color","Toolbar","Typography","variant","className","TextField","fullWidth","margin","label","InputLabelProps","shrink","placeholder","disabled","inProgress","value","onChange","evt","target","onKeyPress","handleKeyPress","Box","width","Button","size","onClick","LinearProgress","error","diagramSvg","dangerouslySetInnerHTML","__html","navigator","clipboard","writeText","diagramCode","href","URL","createObjectURL","Blob","type","download","rel","loading","height","src","alt","data-recalc-dims","event","key","preventDefault","React","Component","AppState","mermaid","initialize","startOnLoad","sequence","noteMargin","boxMargin","boxTextMargin","_diagramSvg","_diagramCode","_error","_inProgress","projectPath","history","replaceState","encodeURIComponent","axios","post","then","response","functions","name","data","func","triggerBinding","undefined","inputBindings","outputBindings","nodeCode","bindings","binding","endsWith","direction","push","activities","subOrchestrators","sort","f1","f2","s1","s2","getTriggerBindingText","inputBinding","getBindingText","outputBinding","subOrchName","subOrch","activityName","render","svg","applyIcons","err","message","methods","join","route","path","databaseName","collectionName","eventHubName","queueName","topicName","subscriptionName","schedule","replace","computed","observable","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.47357c7c.chunk.js","sourcesContent":["var map = {\n\t\"./locale\": 215,\n\t\"./locale.js\": 215\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 485;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { AppBar, Box, Button, LinearProgress, TextField, Toolbar, Typography } from '@material-ui/core';\r\n\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { AppState } from './AppState';\r\n\r\n@observer\r\nexport default class App extends React.Component<{ state: AppState }> {\r\n\r\n    componentDidMount() {\r\n\r\n        if (window.location.search.startsWith('?path=')) {\r\n         \r\n            const state = this.props.state;\r\n            state.pathText = decodeURIComponent(window.location.search.substr(6));\r\n            state.load();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const state = this.props.state;\r\n\r\n        return (<>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n\r\n                    <Typography variant=\"h5\" color=\"inherit\" className=\"title-typography\">\r\n                        Azure Functions as a Graph\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        className=\"filter-textfield\"\r\n                        margin=\"dense\"\r\n                        label=\"GitHub link or local path to Functions project\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        placeholder=\"e.g. 'https://github.com/scale-tone/repka-durable-func'\"\r\n                        disabled={state.inProgress}\r\n                        value={state.pathText}\r\n                        onChange={(evt) => state.pathText = evt.target.value as string}\r\n                        onKeyPress={(evt: React.KeyboardEvent<HTMLInputElement>) => this.handleKeyPress(evt)}\r\n                    />\r\n\r\n                    <Box width={30} />\r\n\r\n                    <Button\r\n                        className=\"filter-button\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        disabled={state.inProgress || !state.pathText}\r\n                        onClick={() => state.load()}\r\n                    >\r\n                        Visualize\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {!!state.inProgress && (<LinearProgress />)}\r\n\r\n            {!!state.error && (<Typography className=\"error-typography\" color=\"error\" variant=\"h5\" >{state.error}</Typography>)}\r\n\r\n            {!!state.diagramSvg && (<>\r\n                <div className=\"diagram-div\"\r\n                    dangerouslySetInnerHTML={{ __html: state.diagramSvg }}\r\n                />\r\n\r\n                <Toolbar variant=\"dense\" className=\"bottom-toolbar\">\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        disabled={state.inProgress}\r\n                        onClick={() => window.navigator.clipboard.writeText(state.diagramCode)}\r\n                    >\r\n                        <FileCopyIcon />\r\n                        <Box width={10} />\r\n                        <Typography color=\"inherit\">Copy diagram code to Clipboard</Typography>\r\n                    </Button>\r\n\r\n                    <Box width={20} />\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        disabled={state.inProgress}\r\n                        href={URL.createObjectURL(new Blob([state.diagramSvg], { type: 'image/svg+xml' }))}\r\n                        download={'functions.svg'}\r\n                    >\r\n                        <SaveIcon />\r\n                        <Box width={20} />\r\n                        <Typography color=\"inherit\">Save as .SVG</Typography>\r\n                    </Button>\r\n\r\n                    <Box width={20} />\r\n                </Toolbar>\r\n            </>)}\r\n\r\n            <a className=\"github-link\" href=\"https://github.com/scale-tone/az-func-as-a-graph\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_white_ffffff.png?resize=149%2C149\" alt=\"Fork me on GitHub\" data-recalc-dims=\"1\" />\r\n            </a>\r\n\r\n        </>);\r\n    }\r\n\r\n    private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (event.key === 'Enter') {\r\n            // Otherwise the event will bubble up and the form will be submitted\r\n            event.preventDefault();\r\n\r\n            this.props.state.load();\r\n        }\r\n    }\r\n}\r\n","import { observable, computed } from 'mobx';\r\nimport axios from 'axios';\r\n\r\nimport mermaid from 'mermaid';\r\n\r\nexport class AppState {\r\n\r\n    @computed\r\n    get diagramSvg(): string { return this._diagramSvg; }\r\n\r\n    @computed\r\n    get diagramCode(): string { return this._diagramCode; }\r\n\r\n    @computed\r\n    get error(): string { return this._error; }\r\n\r\n    @observable\r\n    pathText: string = \"\";\r\n\r\n    @computed\r\n    get inProgress(): boolean { return this._inProgress; };\r\n\r\n    constructor() {\r\n        mermaid.initialize({\r\n            startOnLoad: true,\r\n            sequence: {\r\n                noteMargin: 0,\r\n                boxMargin: 5,\r\n                boxTextMargin: 5\r\n            }\r\n        });\r\n    }\r\n\r\n    load() {\r\n\r\n        if (this._inProgress || !this.pathText) {\r\n            return;\r\n        }\r\n        this._inProgress = true;\r\n        this._error = '';\r\n        this._diagramCode = '';\r\n        this._diagramSvg = '';\r\n\r\n        const projectPath = this.pathText;\r\n        window.history.replaceState(null, null, `?path=${encodeURIComponent(projectPath)}`);\r\n        this.pathText = '';\r\n\r\n        axios.post(`a/p/i/traverse-func`, projectPath).then(response => {\r\n\r\n            try {\r\n                const functions = [];\r\n\r\n                for (const name in response.data) {\r\n                    const func = response.data[name];\r\n\r\n                    var triggerBinding = undefined, inputBindings = [], outputBindings = [];\r\n                    var nodeCode = `${name}{{\"#32;${name}\"}}:::function`;\r\n\r\n                    for (const binding of func.bindings) {\r\n\r\n                        if (binding.type === 'orchestrationTrigger') {\r\n                            nodeCode = `${name}[[\"#32;${name}\"]]:::orchestrator`;\r\n                        } else if (binding.type === 'activityTrigger') {\r\n                            nodeCode = `${name}[/\"#32;${name}\"/]:::activity`;\r\n                        } else if (binding.type === 'entityTrigger') {\r\n                            nodeCode = `${name}[(\"#32;${name}\")]:::entity`;\r\n                        }\r\n                        \r\n                        if (binding.type.endsWith('Trigger')) {\r\n                            triggerBinding = binding;\r\n                        } else if (binding.direction === 'in') {\r\n                            inputBindings.push(binding);\r\n                        } else {\r\n                            outputBindings.push(binding);\r\n                        }\r\n                    }\r\n\r\n                    functions.push({ name, nodeCode, triggerBinding, inputBindings, outputBindings, activities: func.activities, subOrchestrators: func.subOrchestrators });\r\n                }\r\n\r\n                functions.sort((f1, f2) => {\r\n\r\n                    const s1 = (f1.triggerBinding?.type ?? '') + '~' + f1.name;\r\n                    const s2 = (f2.triggerBinding?.type ?? '') + '~' + f2.name;\r\n\r\n                    return (s1 > s2) ? 1 : ((s2 > s1) ? -1 : 0);\r\n                });\r\n\r\n                var code = '';\r\n                for (const func of functions) {\r\n\r\n                    code += `${func.nodeCode}\\n`;\r\n\r\n                    if (!!func.triggerBinding) {\r\n                        code += `${func.name}.${func.triggerBinding.type}>\"#32;${this.getTriggerBindingText(func.triggerBinding)}\"]:::${func.triggerBinding.type} --> ${func.name}\\n`;\r\n                    }\r\n\r\n                    for (const inputBinding of func.inputBindings) {\r\n                        code += `${func.name}.${inputBinding.type}([\"#32;${inputBinding.type}\"]):::${this.getBindingText(inputBinding)} -.-> ${func.name}\\n`;\r\n                    }\r\n\r\n                    for (const outputBinding of func.outputBindings) {\r\n                        code += `${func.name} -.-> ${func.name}.${outputBinding.type}([\"#32;${this.getBindingText(outputBinding)}\"]):::${outputBinding.type}\\n`;\r\n                    }\r\n\r\n                    if (!!func.subOrchestrators) {\r\n\r\n                        for (const subOrchName in func.subOrchestrators) {\r\n\r\n                            code += `${func.name} --> ${func.name}.${subOrchName}[[\"#32;${subOrchName}\"]]:::orchestrator\\n`;\r\n\r\n                            const subOrch = func.subOrchestrators[subOrchName];\r\n                            if (!!subOrch.activities) {\r\n                                \r\n                                for (const activityName in subOrch.activities) {\r\n                                    code += `${func.name}.${subOrchName} --> ${func.name}.${subOrchName}.${activityName}[/\"#32;${activityName}\"/]:::activity\\n`;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!!func.activities) {\r\n                        \r\n                        for (const activityName in func.activities) {\r\n                            code += `${func.name} --> ${func.name}.${activityName}[/\"#32;${activityName}\"/]:::activity\\n`;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!code) {\r\n                    this._inProgress = false;\r\n                    return;\r\n                }\r\n\r\n                this._diagramCode = `graph LR\\n${code}`;\r\n\r\n                mermaid.render('mermaidSvgId', this._diagramCode, (svg) => {\r\n\r\n                    this._diagramSvg = this.applyIcons(svg);\r\n\r\n                    this._inProgress = false;\r\n                });\r\n\r\n            } catch (err) {\r\n                this._error = `Diagram generation failed: ${err.message}`;\r\n                this._inProgress = false;\r\n            }\r\n\r\n        }, err => {\r\n            this._error = `Parsing failed: ${err.message}.${(!!err.response ? err.response.data : '')}`;\r\n            this._inProgress = false;\r\n        });\r\n    }\r\n\r\n    private getTriggerBindingText(binding: any): string {\r\n\r\n        switch (binding.type) {\r\n            case 'httpTrigger':\r\n                return `http${!binding.methods ? '' : ':[' + binding.methods.join(',') + ']'}${!binding.route ? '' : ':' + binding.route}`;\r\n            case 'blobTrigger':\r\n                return `blob:${binding.path}`;\r\n            case 'cosmosDBTrigger':\r\n                return `cosmosDB:${binding.databaseName}:${binding.collectionName}`;\r\n            case 'eventHubTrigger':\r\n                return `eventHub:${binding.eventHubName}`;\r\n            case 'serviceBusTrigger':\r\n                return `serviceBus:${!binding.queueName ? binding.topicName : binding.queueName}${!binding.subscriptionName ? '' : ':' + binding.subscriptionName}`;\r\n            case 'queueTrigger':\r\n                return `queue:${binding.queueName}`;\r\n            case 'timerTrigger':\r\n                return `timer:${binding.schedule}`;\r\n            default:\r\n                return binding.type;\r\n        }\r\n    }\r\n\r\n    private getBindingText(binding: any): string {\r\n\r\n        switch (binding.type) {\r\n            case 'blob':\r\n                return `blob:${binding.path}`;\r\n            case 'cosmosDB':\r\n                return `cosmosDB:${binding.databaseName}:${binding.collectionName}`;\r\n            case 'eventHub':\r\n                return `eventHub:${binding.eventHubName}`;\r\n            case 'serviceBus':\r\n                return `serviceBus:${!binding.queueName ? binding.topicName : binding.queueName}${!binding.subscriptionName ? '' : ':' + binding.subscriptionName}`;\r\n            case 'queue':\r\n                return `queue:${binding.queueName}`;\r\n            default:\r\n                return binding.type;\r\n        }\r\n    }\r\n\r\n    private applyIcons(svg: string): string {\r\n\r\n        svg = svg.replace(/<g class=\"node (\\w+).*?<g class=\"label\" transform=\"translate\\([0-9,.-]+\\)\"><g transform=\"translate\\([0-9,.-]+\\)\">/g,\r\n            '$&<image href=\"static/icons/$1.svg\" width=\"20px\"/>');\r\n\r\n        return svg;\r\n    }\r\n\r\n    @observable\r\n    private _error: string;\r\n    @observable\r\n    private _diagramCode: string;\r\n    @observable\r\n    private _diagramSvg: string;\r\n    @observable\r\n    private _inProgress: boolean;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AppState } from './AppState';\r\n\r\nReactDOM.render(<App state={new AppState()} />, document.getElementById('root'));\r\n"],"sourceRoot":""}