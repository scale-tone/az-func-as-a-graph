{"version":3,"sources":["../node_modules/moment-mini/locale sync /^/.*$","App.tsx","AppState.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","App","observer","window","location","search","startsWith","state","this","props","pathText","decodeURIComponent","substr","load","AppBar","position","color","Toolbar","Typography","variant","className","Link","href","origin","pathname","TextField","fullWidth","margin","label","InputLabelProps","shrink","placeholder","disabled","inProgress","value","onChange","evt","target","onKeyPress","handleKeyPress","Box","width","Button","size","onClick","LinearProgress","error","diagramSvg","dangerouslySetInnerHTML","__html","navigator","clipboard","writeText","diagramCode","URL","createObjectURL","Blob","type","download","rel","loading","height","src","alt","data-recalc-dims","event","key","preventDefault","React","Component","AppState","mermaid","initialize","startOnLoad","_diagramSvg","_diagramCode","_error","_inProgress","projectPath","history","replaceState","encodeURIComponent","axios","post","then","response","functions","name","data","func","triggerBinding","undefined","inputBindings","outputBindings","nodeCode","bindings","binding","endsWith","direction","push","sort","f1","f2","s1","isCalledBy","length","s2","calledBy","getTriggerBindingText","inputBinding","getBindingText","outputBinding","isCalledByItself","render","svg","applyIcons","err","message","methods","join","route","path","databaseName","collectionName","eventHubName","queueName","topicName","subscriptionName","schedule","replace","computed","observable","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2db57e0f.chunk.js","sourcesContent":["var map = {\n\t\"./locale\": 215,\n\t\"./locale.js\": 215\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 486;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { AppBar, Box, Button, LinearProgress, Link, TextField, Toolbar, Typography } from '@material-ui/core';\r\n\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { AppState } from './AppState';\r\n\r\n@observer\r\nexport default class App extends React.Component<{ state: AppState }> {\r\n\r\n    componentDidMount() {\r\n\r\n        if (window.location.search.startsWith('?path=')) {\r\n         \r\n            const state = this.props.state;\r\n            state.pathText = decodeURIComponent(window.location.search.substr(6));\r\n            state.load();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const state = this.props.state;\r\n\r\n        return (<>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n\r\n                    <Typography variant=\"h5\" color=\"inherit\" className=\"title-typography\">\r\n                        <Link color=\"inherit\" href={window.location.origin + window.location.pathname}>\r\n                            Azure Functions as a Graph\r\n                        </Link>\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        className=\"filter-textfield\"\r\n                        margin=\"dense\"\r\n                        label=\"GitHub link or local path to Functions project\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        placeholder=\"e.g. 'https://github.com/scale-tone/repka-durable-func'\"\r\n                        disabled={state.inProgress}\r\n                        value={state.pathText}\r\n                        onChange={(evt) => state.pathText = evt.target.value as string}\r\n                        onKeyPress={(evt: React.KeyboardEvent<HTMLInputElement>) => this.handleKeyPress(evt)}\r\n                    />\r\n\r\n                    <Box width={30} />\r\n\r\n                    <Button\r\n                        className=\"filter-button\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        disabled={state.inProgress || !state.pathText}\r\n                        onClick={() => state.load()}\r\n                    >\r\n                        Visualize\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {!!state.inProgress && (<LinearProgress />)}\r\n\r\n            {!!state.error && (<Typography className=\"error-typography\" color=\"error\" variant=\"h5\" >{state.error}</Typography>)}\r\n\r\n            {!!state.diagramSvg && (<>\r\n                <div className=\"diagram-div\"\r\n                    dangerouslySetInnerHTML={{ __html: state.diagramSvg }}\r\n                />\r\n\r\n                <Toolbar variant=\"dense\" className=\"bottom-toolbar\">\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        disabled={state.inProgress}\r\n                        onClick={() => window.navigator.clipboard.writeText(state.diagramCode)}\r\n                    >\r\n                        <FileCopyIcon />\r\n                        <Box width={10} />\r\n                        <Typography color=\"inherit\">Copy diagram code to Clipboard</Typography>\r\n                    </Button>\r\n\r\n                    <Box width={20} />\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        disabled={state.inProgress}\r\n                        href={URL.createObjectURL(new Blob([state.diagramSvg], { type: 'image/svg+xml' }))}\r\n                        download={'functions.svg'}\r\n                    >\r\n                        <SaveIcon />\r\n                        <Box width={20} />\r\n                        <Typography color=\"inherit\">Save as .SVG</Typography>\r\n                    </Button>\r\n\r\n                    <Box width={20} />\r\n                </Toolbar>\r\n            </>)}\r\n\r\n            <a className=\"github-link\" href=\"https://github.com/scale-tone/az-func-as-a-graph\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_white_ffffff.png?resize=149%2C149\" alt=\"Fork me on GitHub\" data-recalc-dims=\"1\" />\r\n            </a>\r\n\r\n        </>);\r\n    }\r\n\r\n    private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (event.key === 'Enter') {\r\n            // Otherwise the event will bubble up and the form will be submitted\r\n            event.preventDefault();\r\n\r\n            this.props.state.load();\r\n        }\r\n    }\r\n}\r\n","import { observable, computed } from 'mobx';\r\nimport axios from 'axios';\r\n\r\nimport mermaid from 'mermaid';\r\n\r\nexport class AppState {\r\n\r\n    @computed\r\n    get diagramSvg(): string { return this._diagramSvg; }\r\n\r\n    @computed\r\n    get diagramCode(): string { return this._diagramCode; }\r\n\r\n    @computed\r\n    get error(): string { return this._error; }\r\n\r\n    @observable\r\n    pathText: string = \"\";\r\n\r\n    @computed\r\n    get inProgress(): boolean { return this._inProgress; };\r\n\r\n    constructor() {\r\n        mermaid.initialize({ startOnLoad: true });\r\n    }\r\n\r\n    load() {\r\n\r\n        if (this._inProgress || !this.pathText) {\r\n            return;\r\n        }\r\n        this._inProgress = true;\r\n        this._error = '';\r\n        this._diagramCode = '';\r\n        this._diagramSvg = '';\r\n\r\n        const projectPath = this.pathText;\r\n        window.history.replaceState(null, null, `?path=${encodeURIComponent(projectPath)}`);\r\n        this.pathText = '';\r\n\r\n        axios.post(`a/p/i/traverse-func`, projectPath).then(response => {\r\n\r\n            try {\r\n                const functions = [];\r\n\r\n                // Determine what kind of function this one is\r\n                for (const name in response.data) {\r\n                    const func = response.data[name];\r\n\r\n                    var triggerBinding = undefined, inputBindings = [], outputBindings = [];\r\n                    var nodeCode = `${name}{{\"#32;${name}\"}}:::function`;\r\n\r\n                    for (const binding of func.bindings) {\r\n\r\n                        if (binding.type === 'orchestrationTrigger') {\r\n                            nodeCode = `${name}[[\"#32;${name}\"]]:::orchestrator`;\r\n                        } else if (binding.type === 'activityTrigger') {\r\n                            nodeCode = `${name}[/\"#32;${name}\"/]:::activity`;\r\n                        } else if (binding.type === 'entityTrigger') {\r\n                            nodeCode = `${name}[(\"#32;${name}\")]:::entity`;\r\n                        }\r\n                        \r\n                        if (binding.type.endsWith('Trigger')) {\r\n                            triggerBinding = binding;\r\n                        } else if (binding.direction === 'in') {\r\n                            inputBindings.push(binding);\r\n                        } else {\r\n                            outputBindings.push(binding);\r\n                        }\r\n                    }\r\n\r\n                    functions.push({ name, nodeCode, triggerBinding, inputBindings, outputBindings, ...func });\r\n                }\r\n\r\n                // Sorting by trigger type, then by name\r\n                functions.sort((f1, f2) => {\r\n\r\n                    var s1 = (!!f1.isCalledBy?.length || !f1.triggerBinding || !f1.triggerBinding.type) ? '' : f1.triggerBinding.type;\r\n                    s1 += '~' + f1.name;\r\n\r\n                    var s2 = (!!f2.isCalledBy?.length || !f2.triggerBinding || !f2.triggerBinding.type) ? '' : f2.triggerBinding.type;\r\n                    s2 += '~' + f2.name;\r\n\r\n                    return (s1 > s2) ? 1 : ((s2 > s1) ? -1 : 0);\r\n                });\r\n\r\n                // Rendering\r\n                var code = '';\r\n                for (const func of functions) {\r\n\r\n                    code += `${func.nodeCode}\\n`;\r\n\r\n                    if (!!func.isCalledBy?.length) {\r\n                        \r\n                        for (const calledBy of func.isCalledBy) {\r\n                            code += `${calledBy} --> ${func.name}\\n`;\r\n                        }\r\n\r\n                    } else if (!!func.triggerBinding) {\r\n\r\n                        code += `${func.name}.${func.triggerBinding.type}>\"#32;${this.getTriggerBindingText(func.triggerBinding)}\"]:::${func.triggerBinding.type} --> ${func.name}\\n`;\r\n                    }\r\n\r\n                    for (const inputBinding of func.inputBindings) {\r\n                        code += `${func.name}.${inputBinding.type}([\"#32;${this.getBindingText(inputBinding)}\"]):::${inputBinding.type} -.-> ${func.name}\\n`;\r\n                    }\r\n\r\n                    for (const outputBinding of func.outputBindings) {\r\n                        code += `${func.name} -.-> ${func.name}.${outputBinding.type}([\"#32;${this.getBindingText(outputBinding)}\"]):::${outputBinding.type}\\n`;\r\n                    }\r\n\r\n                    if (!!func.isCalledByItself) {\r\n                        \r\n                        code += `${func.name} -- \"[ContinueAsNew]\" --> ${func.name}\\n`;\r\n                    }\r\n                }\r\n\r\n                if (!code) {\r\n                    this._inProgress = false;\r\n                    return;\r\n                }\r\n\r\n                this._diagramCode = `graph LR\\n${code}`;\r\n\r\n                mermaid.render('mermaidSvgId', this._diagramCode, (svg) => {\r\n\r\n                    this._diagramSvg = this.applyIcons(svg);\r\n\r\n                    this._inProgress = false;\r\n                });\r\n\r\n            } catch (err) {\r\n                this._error = `Diagram generation failed: ${err.message}`;\r\n                this._inProgress = false;\r\n            }\r\n\r\n        }, err => {\r\n            this._error = `Parsing failed: ${err.message}.${(!!err.response ? err.response.data : '')}`;\r\n            this._inProgress = false;\r\n        });\r\n    }\r\n\r\n    private getTriggerBindingText(binding: any): string {\r\n\r\n        switch (binding.type) {\r\n            case 'httpTrigger':\r\n                return `http${!binding.methods ? '' : ':[' + binding.methods.join(',') + ']'}${!binding.route ? '' : ':' + binding.route}`;\r\n            case 'blobTrigger':\r\n                return `blob:${binding.path}`;\r\n            case 'cosmosDBTrigger':\r\n                return `cosmosDB:${binding.databaseName}:${binding.collectionName}`;\r\n            case 'eventHubTrigger':\r\n                return `eventHub:${binding.eventHubName}`;\r\n            case 'serviceBusTrigger':\r\n                return `serviceBus:${!binding.queueName ? binding.topicName : binding.queueName}${!binding.subscriptionName ? '' : ':' + binding.subscriptionName}`;\r\n            case 'queueTrigger':\r\n                return `queue:${binding.queueName}`;\r\n            case 'timerTrigger':\r\n                return `timer:${binding.schedule}`;\r\n            default:\r\n                return binding.type;\r\n        }\r\n    }\r\n\r\n    private getBindingText(binding: any): string {\r\n\r\n        switch (binding.type) {\r\n            case 'blob':\r\n                return `blob:${binding.path}`;\r\n            case 'cosmosDB':\r\n                return `cosmosDB:${binding.databaseName}:${binding.collectionName}`;\r\n            case 'eventHub':\r\n                return `eventHub:${binding.eventHubName}`;\r\n            case 'serviceBus':\r\n                return `serviceBus:${!binding.queueName ? binding.topicName : binding.queueName}${!binding.subscriptionName ? '' : ':' + binding.subscriptionName}`;\r\n            case 'queue':\r\n                return `queue:${binding.queueName}`;\r\n            default:\r\n                return binding.type;\r\n        }\r\n    }\r\n\r\n    private applyIcons(svg: string): string {\r\n\r\n        svg = svg.replace(/<g class=\"node (\\w+).*?<g class=\"label\" transform=\"translate\\([0-9,.-]+\\)\"><g transform=\"translate\\([0-9,.-]+\\)\">/g,\r\n            '$&<image href=\"static/icons/$1.svg\" width=\"20px\"/>');\r\n\r\n        return svg;\r\n    }\r\n\r\n    @observable\r\n    private _error: string;\r\n    @observable\r\n    private _diagramCode: string;\r\n    @observable\r\n    private _diagramSvg: string;\r\n    @observable\r\n    private _inProgress: boolean;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AppState } from './AppState';\r\n\r\nReactDOM.render(<App state={new AppState()} />, document.getElementById('root'));\r\n"],"sourceRoot":""}